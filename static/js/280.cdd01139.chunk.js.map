{"version":3,"file":"static/js/280.cdd01139.chunk.js","mappings":"oPACA,EAAuB,qBAAvB,EAAoD,sB,SCMrC,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHR,EAASS,GACT,MAEF,IAAK,WACHP,EAAYO,GACZ,MAEF,QACE,OAEL,EASKC,EAAQ,WACZV,EAAS,IACTE,EAAY,GACb,EAED,OACE,4BACE,gDAEA,UAACS,EAAA,EAAD,CAAMC,SAhBW,SAAAN,GACnBA,EAAMO,iBACNV,EAASW,EAAAA,EAAAA,MAAqB,CAAEf,MAAAA,EAAOE,SAAAA,KAEvCS,GACD,EAWiCK,UAAWC,EAAUC,aAAa,MAAhE,WACE,SAACN,EAAA,QAAD,CAAYI,UAAU,OAAOG,UAAU,iBAAvC,UACE,UAACP,EAAA,QAAD,CAAYI,UAAWC,EAAvB,2BAEE,SAACL,EAAA,UAAD,CACEQ,KAAK,QACLX,KAAK,QACLC,MAAOV,EACPqB,SAAUf,UAKhB,SAACM,EAAA,QAAD,CAAYI,UAAU,OAAOG,UAAU,oBAAvC,UACE,UAACP,EAAA,QAAD,CAAYI,UAAWC,EAAvB,sBAEE,SAACL,EAAA,UAAD,CACEQ,KAAK,WACLX,KAAK,WACLC,MAAOR,EACPmB,SAAUf,UAIhB,SAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUH,KAAK,SAA/B,0BAMP,C","sources":["webpack://react-homework-template/./src/components/SignIn/SignIn.module.css?4c9a","components/SignIn/SignIn.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignIn_form__3wwVM\",\"label\":\"SignIn_label__9kE9P\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport authOperations from '../../redux/auth/authOperations';\nimport css from '../SignIn/SignIn.module.css';\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Authorization page</h1>\n\n      <Form onSubmit={handleSubmit} className={css.form} autoComplete=\"off\">\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label className={css.label}>\n            Email address\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </Form.Label>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label className={css.label}>\n            Password\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </Form.Label>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Sign in\n        </Button>\n      </Form>\n    </div>\n  );\n}"],"names":["SignIn","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","target","name","value","reset","Form","onSubmit","preventDefault","authOperations","className","css","autoComplete","controlId","type","onChange","Button","variant"],"sourceRoot":""}